---
editor_options: 
  chunk_output_type: console
---

# Журнал посещений

## Знакомство с данными

Мы начнем с отчета, где фиксируются данные посещений спа-центра. В этом датафрейме мы имеем следующие данные:

```{r}
#| include: false
library(tidyverse)
library(lubridate)
library(hms)
library(dtplyr)
library(patchwork)
library(vroom)
library(plotly)
Session_log <- vroom("/Users/abby/Library/Mobile Documents/com~apple~CloudDocs/DDM/Git/Universe/Session_log_end.csv")
```

```{r}
#| echo: false
#| fig-align: center
Session_log %>% head(20)
```

```{r}
#| include: false
max_date <- Session_log %>% 
  summarise(max = max(start_of_visit, na.rm = T))
```

::: {.callout-important appearance="simple"}
## Обратите внимание

Данные за 2022 год предствалены до `r max_date$max`
:::

::: {.callout-warning appearance="simple"}
## Внимание

Хотелось бы напомнить, что с марта по июль 2020 года была пандемия COVID-19. Поэтому на все показатели 2020 нужно обращать внимание с учетом этого события.
:::

В нашей таблице содержатся следующие столбцы:

::: {.callout-note appearance="simple"}
## Заметка

Мы выделим наиболее важные для нашего понимания
:::

-   `id` - номер карты

-   `start_of_visit` - начало визита

-   `end_of_visit` - окончание визита

-   `duration_visit` - продолжительность визита (в минутах)

-   `сard_type_2` - преобразованный тип абонемента

-   `segment` - сегмент гостя

В наших данных есть много пропущенных значений в переменной `id` и `сard_type_2.`

**Есть несколько причин этого:**

1.  В начале работы спа-центра были созданы карты `Сауна` и `Аноним`, к которым не привязывался номер карты

2.  Отсутсвие названия абонемента в переменной сard_type_2 связано с тем, что по картам Сауна, оказывались услуги типа "Оформить визит", которые не требуют продажи абонемента.

Если мы посмотрим на данные, например, 2019 года, то такой проблемы не будет.

```{r}
#| echo: false
Session_log %>% 
  filter(year_start == 2019) %>% 
  head(5)
```

### Переменная `сard_type_2` {.unnumbered}

У нас есть переменная `сard_type_2.` Это перекодированная версия столбца `сard_type.`

Эта операция нам понадобилась, чтобы привести к единому формату название абонементов, которые в разный период времени имели различные наименования, но по сути являлись одним и тем же.

Ниже мы посмотрим какая доля посещений приходится на каждый вид абонемента:

```{r}
#| echo: false
Session_log %>% 
  count(сard_type_2, sort = T) %>% 
  summarise(сard_type_2, prop = n/sum(n)*100) %>% 
  mutate(prop = round(prop, 1)) %>% 
  set_names("Тип абонемента", "Доля %")
```

22% посещений спа-центра приходится на годовой безлимитный абонемент. Стоит отметиь, что это абонементы "Серебро" и "Безлимитный".

Давайте посмотрим на тоже самое, но в разрезе годов.

```{r message=FALSE}
#| echo: false
Session_log %>% 
  filter(!is.na(year_start)) %>% 
  count(year_start, сard_type_2) %>%
  group_by(year_start) %>%
  summarise(сard_type_2, n, y = sum(n)) %>%
  ungroup() %>% 
  summarise(year_start, сard_type_2, prop = n/y*100) %>% 
  mutate(prop = round(prop, 1)) %>% 
  pivot_wider(names_from = year_start, values_from = prop)
```

Здесь нужно отметить, что до 2016 года в спа-центре не было годовых безлимитных карт, но они есть в нашем отчете. Это проблема связана с тем, что вместо того, чтобы создать новые абонементы - переименовали старые. Это не сильно повлияет на наш отчет в дальнейшем. Но будем иметь это ввиду на будущее.

Кроме того, мы можем заметить, что до 2017 года наибольшая доля посещений приходилось на абонементы типа `А (А10, А5, А4 и прочее)`. Абонменты типа `Not`, с высокой долей вероятностью, - различные разовые посещения.

Визуализируем наши данные по типам карт. Предварительно уберем из данных все абонементы, которые имеют долю не менее 5% посещений в каждом годе.

```{r}
#| include: false
gg_prop_log <- Session_log %>%
  filter(!is.na(year_start)) %>% 
  count(year_start, сard_type_2) %>%
  group_by(year_start) %>%
  summarise(сard_type_2, n, y = sum(n)) %>%
  ungroup() %>% 
  summarise(year_start, сard_type_2, prop = n/y*100) %>% 
  mutate(prop = round(prop, 1)) %>% 
  filter(prop >= 5)
```

```{r}
#| echo: false

ggplot(gg_prop_log, aes(factor(year_start), prop, fill = сard_type_2)) +
  geom_col() +
  theme_light() +
  theme(legend.position = "none") +
  facet_wrap(~сard_type_2) +
  xlab("") +
  ylab("") +
  ggtitle("Доля посещений по абонементам",
          subtitle = "с 2014 по август 2022")
```

Мы видим, что доля посещений на безлимитные абонеменнты 12 мес увеличивается с каждым годом. Посмотрим, как это выглядит в абсолбтных цифрах. Выделим только пермеменную `Hard_12`

::: {.callout-important appearance="simple"}
## Обратите внимание

`Hard_12` - содержит в себе как карты типа "Серебро", так и карты типа "Золото". Мы объединили их по причине того, что карты "Золото" были убраны из продаж. То есть, часть аудитории в настоящее время пользуется обычными безлимитными годовыми абонмеентами, что отражается на доле посещений.
:::

```{r}
#| echo: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(!is.na(year_start),
         сard_type_2 == "Hard_12") %>% 
  count(year_start) %>% 
  ggplot(aes(year_start, n, col = "red", alpha = 0.7)) +
  geom_line() +
  geom_point() +
  theme_light() +
  theme(legend.position = "none") +
  xlab("Год посещения") +
  ylab("Кол-во посещений") +
  ggtitle("Посещения по безлемитному годовому абонементу",
          subtitle = "с 2014 по август 2022") +
  geom_text(aes(label = n),
            position = position_dodge(width = 0), vjust = -0.6,
            size = 3,
            alpha = 1,
            col = "black")
```

Вторыми по посещаемости в наших данных являются карты `А8_pool`. Думаю, что есть смысл посмотреть динамику посещений по всем картам типа `А` (за исключением групповых занятий).

```{r}
#| echo: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool")) %>%
  count(year_start) %>% 
  ggplot(aes(year_start, n, col = "coral")) +
  geom_line() +
  geom_point() +
  theme_light() +
  theme(legend.position = "none") +
  xlab("Год посещения") +
  ylab("Кол-во посещений") +
  ggtitle("Посещения по абонементам А",
          subtitle = "с 2014 по август 2022") +
  geom_text(aes(label = n),
            position = position_dodge(width = 0), vjust = -0.6,
            size = 3,
            alpha = 1,
            col = "black")
```

Мы видим, что количество посещений по данным абонементам с каждый годом сокращается. С 2016 года это свзано с введением безлимитных абонементов.

Посмотрим на общее количесво посещений из года в год.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(!is.na(year_start)) %>% 
  count(year_start) %>% 
  ggplot(aes(year_start, n, col = "coral")) +
  geom_line() +
  geom_point() +
  theme_light() +
  theme(legend.position = "none") +
  xlab("Год посещения") +
  ylab("Кол-во посещений") +
  ggtitle("Все посещения ",
          subtitle = "с 2014 по август 2022") +
  geom_text(aes(label = n),
            position = position_dodge(width = 0), vjust = -0.6,
            size = 3,
            alpha = 1,
            col = "black") +
  geom_smooth(method = "lm",
              size = 0.4,
              col = "blue",
              linetype = "dashed",
              alpha = 0.1)
```

Максимальное количество посещений было в 2019 году. По остальным годам видно, что количество посещений варьируется от 57 323 в 2021 году до 62 580 в 2018 году.

Давайте посмотрим на динамику разовых посещений. Возьмем все разовые посещения. Исключим только групповые занятия.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>%
  filter(str_detect(сard_type_2, "One"),
         !is.na(year_start)) %>% 
  count(year_start) %>% 
  ggplot(aes(year_start, n, col = "coral")) +
  geom_line() +
  geom_point() +
  theme_light() +
  theme(legend.position = "none") +
  xlab("Год посещения") +
  ylab("Кол-во посещений") +
  ggtitle("Разовые посещения",
          subtitle = "с 2014 по август 2022") +
  geom_text(aes(label = n),
            position = position_dodge(width = 0), vjust = -0.6,
            size = 3,
            alpha = 1,
            col = "black") +
  geom_smooth(method = "lm",
              size = 0.4,
              col = "blue",
              linetype = "dashed",
              alpha = 0.1)
```

Мы видим, что в данном случае, динамика разовых посещений положительная. Давайте посмотрим на структуру разовых посещений.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>%
  filter(str_detect(сard_type_2, "One"),
         !is.na(year_start)) %>% 
  count(year_start, сard_type_2) %>% 
  ggplot(aes(year_start, n, col = сard_type_2)) +
  geom_line() +
  geom_point() +
  theme_light() +
  theme(legend.position = "bottom",
        legend.title = element_blank()) +
  xlab("Год посещения") +
  ylab("Кол-во посещений") +
  ggtitle("Разовые посещения",
          subtitle = "с 2014 по август 2022") +
  geom_text(aes(label = n),
            position = position_dodge(width = 0), vjust = -0.6,
            size = 3,
            alpha = 1,
            col = "black")
```

Мы видим, что разовые посещения в бассейн `One_pool` имеют наибольший вклад в единоразовых посещениях нашего комплекса.

Ранее мы смотрели на годовые абонемнты `Hard_12`, так как они имели наибольшую долю посещений. Было бы интересно посмотреть на все безлимитные абонементы.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard"),
         !is.na(year_start)) %>% 
  count(year_start, сard_type_2) %>% 
  ggplot(aes(year_start, n, col = сard_type_2)) +
  geom_line() +
  geom_point() +
  theme_light() +
  theme(legend.position = "bottom",
        legend.title = element_blank()) +
  scale_y_continuous(n.breaks = 15) +
  xlab("Год посещения") +
  ylab("Кол-во посещений") +
  ggtitle("Все безлимитные абонементы",
          subtitle = "с 2014 по август 2022")
```

Понятно, что большое количество посещений приходится на годовые абонементы. Но нам интересна динамика посещений и по другим безлимитным посещениям. Мы видим, что абонемент `Hard_3` пользуется большей популярностью, чем `Hard_6`.

Давайте теперь выделим все посещения абонеметов группы `А`, группы `Hard` и `One` (разовые).

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard|One|А")) %>% 
  count(сard_type_2) %>%
  mutate(сard_type_2 = fct_reorder(сard_type_2, n, .desc = F)) %>% 
  ggplot(aes(n, сard_type_2, fill = сard_type_2)) +
  geom_col(alpha = 0.6) +
  theme_light() +
  geom_text(aes(label = n),
            position = position_dodge(width = 0), vjust = 0,
            size = 2,
            alpha = 1,
            col = "black") +
  theme(legend.position = "none") +
  xlab("Кол-во посещений") +
  ylab("") +
  ggtitle("Кол-во посещений по абонеемнтам",
          subtitle = "с 2014 по август 2022")
```

Суммируем все посещения по типам абонементов.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard|One|А")) %>% 
  count(сard_type_2) %>% 
  mutate(сard_type_2 = case_when(str_detect(сard_type_2, "А") ~ "Все абонементы группы А",
                                 str_detect(сard_type_2, "Hard") ~ "Все безлимитные",
                                 str_detect(сard_type_2, "One") ~ "Все разовые")) %>%
  group_by(сard_type_2) %>% 
  summarise(sum_card = sum(n)) %>% 
  ungroup() %>% 
  mutate(сard_type_2 = fct_reorder(сard_type_2, sum_card, .desc = T)) %>% 
  ggplot(aes(сard_type_2, sum_card, fill = сard_type_2)) +
  geom_col(alpha = 0.6) +
  theme_light() +
  geom_text(aes(label = sum_card),
            position = position_dodge(width = 0), vjust = 0,
            size = 2,
            alpha = 1,
            col = "black") +
  theme(legend.position = "none") +
  xlab("") +
  ylab("Кол-во посещений") +
  ggtitle("Кол-во посещений по группам абонементов",
          subtitle = "с 2014 по август 2022")
```

Суммируем все посещения по типам абонементов в разрезе годов.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard|One|А"),
          !is.na(year_start)) %>% 
  count(сard_type_2, year_start) %>% 
  mutate(сard_type_2 = case_when(str_detect(сard_type_2, "А") ~ "Все абонементы группы А",
                                 str_detect(сard_type_2, "Hard") ~ "Все безлимитные",
                                 str_detect(сard_type_2, "One") ~ "Все разовые")) %>%
  group_by(year_start, сard_type_2) %>% 
  summarise(sum_card = sum(n)) %>% 
  ungroup() %>% 
  ggplot(aes(factor(year_start), sum_card, fill = сard_type_2)) +
  geom_col(alpha = 0.6) +
  theme_light() +
  geom_text(aes(label = sum_card),
            position = position_dodge(width = 0), vjust = -0.5,
            size = 1.7,
            alpha = 1,
            col = "black") +
  theme(legend.position = "none") +
  xlab("Год") +
  ylab("Кол-во посещений") +
  ggtitle("Кол-во посещений по группам абонементов",
          subtitle = "по годам") +
  theme(axis.text.x = element_text(angle = 0, size = 5)) +
  facet_grid(~сard_type_2)
```

Мы видим, что основынми группами абонементов, по которым чаще всего ходят гости, являются:

-   Безлимитные абонементы типа `Hard`

-   Абонементы группа `А`

-   Разовые абонементы `One`

Делать какие-либо выводы сейчас будет своевременно. Имеет смысл, полученные данные, рассматривать вместе с отчетом о продажах карт, к которому мы перейдем позже.

### Переменная `duration_visit` {.unnumbered}

#### Абонементы группы `А` {.unnumbered}

В наших данных также имеется перменная, которая отражает продолжительность посещения спа-центра, Мы знаем, что абонементы группы `А` ограничены временм посещения 45 минут. Плюс время на переодевание. В среднем мы закладываем 80-90 минут на посещение бассейна нашими гостями. Давайте проверим так ли это в среднем:

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool")) %>% 
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit)) %>% 
  set_names("Среднее время посещения", "Медианное время посещения", "Стандартное отклонение")
```

```{r}
#| include: false
des_A <- Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool")) %>% 
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit))
```

Посмотрим на график

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool")) %>% 
  ggplot(aes(duration_visit)) +
  geom_density(col = "coral") +
  theme_light() +
  scale_y_continuous(n.breaks = 10) +
  scale_x_continuous(n.breaks = 10) +
  xlab("Минуты") +
  ylab("") +
  ggtitle("Распределение времени посещений по минутам",
          subtitle = "Абонементы группы А бассйен")
```

Мы видим, что среднее время равняется `r round(des_A$mean, 1)` минутам. Стандартное отклонение - `r round(des_A$sd, 1)` минут. Это связано с тем, что в данных есть ошибки. Также, мы можем наблюдать данные ошибки и на графике. Причины различны: от некорректной работы ПО до ошибки администратора.

Давайте скорректируем наши данные, а именно отсечем по 5% данных с каждого конца,

::: {.callout-note appearance="simple"}
## Заметка

Таким образом, мы потерям часть информации, но уберем крайние значения. Скорее всего среднее и медиана изменятся не существенно, а графически мы получим более реальную картину.
:::

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
duration_A <- Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool"),
         duration_visit > 0) %>% 
  summarise(Q1 = quantile(duration_visit, probs = 0.05),
            Q4 = quantile(duration_visit, probs = 0.95))
```

Наши крайние значения:

-   Q1 = `r duration_A$Q1`

-   Q4 = `r duration_A$Q4`

Посотрим как изменилось среднее, медиана и стандратное отклонение и сразу взгляним на график

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool"),
         duration_visit > duration_A$Q1 & duration_visit < duration_A$Q4) %>% 
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit)) %>% 
  set_names(
    "Среднее",
    "Медиана",
    "Стд.отклонение"
  )

mean_A <- Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool"),
         duration_visit > duration_A$Q1 & duration_visit < duration_A$Q4) %>% 
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit))
```

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "А") & str_detect(сard_type_2, "pool"),
         duration_visit > duration_A$Q1 & duration_visit < duration_A$Q4) %>% 
  ggplot(aes(duration_visit)) +
  geom_density(col = "coral") +
  theme_light() +
  scale_y_continuous(n.breaks = 10) +
  scale_x_continuous(n.breaks = 10) +
  geom_vline(
    xintercept = mean_A$mean,
    size = 0.4,
    col = "blue",
    alpha = 0.4,
    linetype = "dashed"
  ) +
  annotate(
    "text",
    x = mean_A$mean - 2,
    y = 0.008,
    label = "Среднее",
    size = 3,
    angle = 90
  ) +
  xlab("Минуты") +
  ylab("") +
  ggtitle("Распределение времени посещений по минутам",
          subtitle = "Абонементы группы А бассйен")
```

Мы видим, что существенно изменилось только стандартное отклонение. Остальные показатели остались в пределах первоначальных значений.

Можно заключить, что, в целом, гости, которые посещели наш спа-центр по абонементам группы `А`, укладывались в рамки того времени, которое мы устанавливали.

Тоже самое должно быть характерно и для абонементов разового посещения в бассейн.

#### Абонементы разового посещения в бассейн {.unnumbered}

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "One") & str_detect(сard_type_2, "pool")) %>% 
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit),
            Q1 = quantile(duration_visit, probs = 0.05),
            Q4 = quantile(duration_visit, probs = 0.95)) %>% 
  set_names("Среднее время посещения",
            "Медианное время посещения",
            "Стандартное отклонение",
            "5% квантиль",
            "95% квантиль")
```

```{r}
#| include: false
One_pool <- Session_log %>% 
  filter(str_detect(сard_type_2, "One") & str_detect(сard_type_2, "pool")) %>% 
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit),
            Q1 = quantile(duration_visit, probs = 0.05),
            Q4 = quantile(duration_visit, probs = 0.95))
```

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "One") & str_detect(сard_type_2, "pool")) %>% 
  ggplot(aes(duration_visit)) +
  geom_density(col = "coral") +
  theme_light() +
  scale_y_continuous(n.breaks = 10) +
  scale_x_continuous(n.breaks = 10) +
  xlab("Минуты") +
  ylab("") +
  ggtitle("Распределение времени посещений по минутам",
          subtitle = "Разовое посещение бассейна")
```

Мы видим, что гости, которые посещают спа-центр разово, более склонны нарушать правила клуба. Стандартное отклонение посещения - `r round(One_pool$sd, 1)` минуты, а среднее `r round(One_pool$mean, 1)` минут.

Мы проделаем туже корректировку с данными, как это было с абонементами гуппы `А`.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "One") & str_detect(сard_type_2, "pool"),
         duration_visit > One_pool$Q1 & duration_visit < One_pool$Q4) %>%
  summarise(Среднее = mean(duration_visit),
            Медиана = median(duration_visit),
            Стандартное_отклонение = sd(duration_visit))

One_pool_2 <- Session_log %>% 
  filter(str_detect(сard_type_2, "One") & str_detect(сard_type_2, "pool"),
         duration_visit > One_pool$Q1 & duration_visit < One_pool$Q4) %>%
  summarise(mean = mean(duration_visit),
            median = median(duration_visit),
            sd = sd(duration_visit))
```

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "One") & str_detect(сard_type_2, "pool"),
         duration_visit > One_pool$Q1 & duration_visit < One_pool$Q4) %>%
  ggplot(aes(duration_visit)) +
  geom_density(col = "coral") +
  theme_light() +
  scale_y_continuous(n.breaks = 10) +
  scale_x_continuous(n.breaks = 10) +
  geom_vline(
    xintercept = One_pool_2$mean,
    size = 0.4,
    col = "blue",
    alpha = 0.4,
    linetype = "dashed"
  ) +
  annotate(
    "text",
    x = One_pool_2$mean - 2,
    y = 0.008,
    label = "Среднее",
    size = 3,
    angle = 90
  ) +
  xlab("Минуты") +
  ylab("") +
  ggtitle("Распределение времени посещений по минутам",
          subtitle = "Разовое посещение бассейна")
```

Мы видим, что среднее изменилось не существенно и теперь равняется `r round(One_pool_2$mean, 1)`. На графике теперь видно, что большая часть посетителей укладывается в рамки 80-90 минут посещения.

#### Абонементы группы `Hard` {.unnumbered}

Абонменты гурппы `Hard` неограничены во времени и включают в себя как посещения бассейна, так и посещения банного комплекса. Наша гипотеза заключалась в том, что гости не будут находиться в комплексе в среднем более 3 часов *(180 минут)*.

Сейчас мы посмотрим как распределено время посещения по всем абонеметам типа `Hard`. Далее посмотрим каждый абонемент в отдельности.

::: {.callout-note appearance="simple"}
## Заметка

Данные абонементы имеют выбросы. Много крайне низких и высоких значений*.* Мы понимаем, что это по большой части ошибки, связанные с разными причинами. Давайте посмотрим на квантили распредения и очистим наши данные от критических значений. В нашем случае Q1 будет равняться 5%, а Q4 - 95% данным.
:::

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard"),
         duration_visit > 0) %>% 
  summarise(Q1 = quantile(duration_visit, probs = 0.05),
            Q4 = quantile(duration_visit, probs = 0.95))
```

```{r}
#| include: false

duration_hard <- Session_log %>% 
  filter(str_detect(сard_type_2, "Hard"),
         duration_visit > 0) %>% 
  summarise(Q1 = quantile(duration_visit, probs = 0.05),
            Q4 = quantile(duration_visit, probs = 0.95))
```

Мы видим, что 95% данных лежит в переделе `r round(duration_hard$Q4, 1)` минут, то есть все остальные значения, которые больше `r round(duration_hard$Q4, 1)` минут, характерны только для 5% случаев. 5% данных имеют показателоь менее `r round(duration_hard$Q1, 1)` минут.

Исходя из вышесказанного мы отсечем все данные, которые менее `Q1` и не больше `Q4` и построим график распредлеения.

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard"),
         duration_visit > duration_hard$Q1 & duration_visit < duration_hard$Q4) %>%
  summarise(Среднее = mean(duration_visit),
            Медиана = median(duration_visit),
            Стандартное_отклонение = sd(duration_visit))

hard_dur_v <- Session_log %>% 
  filter(str_detect(сard_type_2, "Hard"),
         duration_visit > duration_hard$Q1 & duration_visit < duration_hard$Q4) %>%
  summarise(Среднее = mean(duration_visit),
            Медиана = median(duration_visit),
            Стандартное_отклонение = sd(duration_visit))
```

```{r}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-align: center
Session_log %>% 
  filter(str_detect(сard_type_2, "Hard"),
         duration_visit > duration_hard$Q1 & duration_visit < duration_hard$Q4) %>% 
  ggplot(aes(duration_visit)) +
  geom_density(col = "coral") +
  theme_light() +
  geom_vline(
    xintercept = hard_dur_v$Среднее,
    size = 0.4,
    col = "blue",
    alpha = 0.4,
    linetype = "dashed"
  ) +
  annotate(
    "text",
    x = hard_dur_v$Среднее - 2,
    y = 0.008,
    label = "Среднее",
    size = 3,
    angle = 90
  ) +
  scale_y_continuous(n.breaks = 10) +
  scale_x_continuous(n.breaks = 10) +
  xlab("Минуты") +
  ylab("") +
  ggtitle("Распределение времени посещений по минутам",
          subtitle = "Все абонменты типа Hard")
```

Мы видим, что основная доля посещений лежит левее среднего, то есть мы можем заключить, что наша гиппотеза оказалась ошибочной, правда, в нашу пользу.
